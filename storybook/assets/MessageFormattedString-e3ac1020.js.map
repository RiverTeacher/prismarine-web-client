{"version":3,"file":"MessageFormattedString-e3ac1020.js","sources":["../../node_modules/.pnpm/@xmcl+text-component@2.1.3/node_modules/@xmcl/text-component/dist/index.mjs","../../src/botUtils.ts","../../node_modules/.pnpm/change-case@5.1.2/node_modules/change-case/dist/index.js","../../node_modules/.pnpm/nearley@2.20.1/node_modules/nearley/lib/nearley.js","../../node_modules/.pnpm/mojangson@2.0.4/node_modules/mojangson/grammar.js","../../node_modules/.pnpm/mojangson@2.0.4/node_modules/mojangson/index.js","../../node_modules/.pnpm/@lit+reactive-element@1.6.3/node_modules/@lit/reactive-element/css-tag.js","../../node_modules/.pnpm/@lit+reactive-element@1.6.3/node_modules/@lit/reactive-element/reactive-element.js","../../node_modules/.pnpm/lit-html@2.8.0/node_modules/lit-html/lit-html.js","../../node_modules/.pnpm/lit-element@3.3.3/node_modules/lit-element/lit-element.js","../../src/menus/components/common.js","../../src/react/Scoreboard.tsx","../../src/react/ChatContainer.tsx","../../src/react/MessageFormatted.tsx","../../src/react/MessageFormattedString.tsx"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// index.ts\nfunction getStyleCode(style) {\n  let code = \"\";\n  for (const l of TextFormat.list) {\n    if (l.matchStyle(style)) {\n      code += l;\n    }\n  }\n  return code;\n}\nfunction getSuggestedStyle(style) {\n  const styledObject = {};\n  for (const l of TextFormat.list) {\n    if (l.matchStyle(style)) {\n      Object.assign(styledObject, l.cssForeground);\n    }\n  }\n  return styledObject;\n}\nfunction render(src) {\n  const children = [];\n  for (const component of src.extra || []) {\n    children.push(render(component));\n  }\n  return { children, component: src, style: getSuggestedStyle(src) };\n}\nfunction flat(component) {\n  const arr = [component];\n  if (component.extra && component.extra.length !== 0) {\n    for (const s of component.extra) {\n      arr.push(...flat(s));\n    }\n  }\n  return arr;\n}\nfunction toFormattedString(comp) {\n  let v = \"\";\n  for (const component of flat(comp)) {\n    const text = component.text;\n    if (text.length !== 0) {\n      v += `${getStyleCode(component)}${text}${TextFormat.RESET}`;\n    }\n  }\n  return v;\n}\nfunction fromFormattedString(formatted) {\n  const firstCode = formatted.indexOf(\"\\xA7\");\n  if (firstCode === -1) {\n    return { text: formatted };\n  }\n  const textComponent = {\n    text: formatted.substring(0, firstCode)\n  };\n  let builder = \"\";\n  const style = {\n    bold: false,\n    obfuscated: false,\n    strikethrough: false,\n    underlined: false,\n    italic: false,\n    color: void 0\n  };\n  for (let i = firstCode; i < formatted.length; i++) {\n    const word = formatted.charCodeAt(i);\n    if (word === 167 && i + 1 < formatted.length) {\n      if (builder.length !== 0) {\n        if (!textComponent.extra) {\n          textComponent.extra = [];\n        }\n        textComponent.extra.push({ text: builder, ...style });\n        builder = \"\";\n      }\n      const format = TextFormat.fromCode(formatted.charAt(i + 1).toLowerCase());\n      if (format) {\n        format.applyToStyle(style);\n      }\n      ++i;\n    } else {\n      builder += formatted[i];\n    }\n  }\n  if (builder.length !== 0) {\n    if (!textComponent.extra) {\n      textComponent.extra = [];\n    }\n    textComponent.extra.push({ text: builder, ...style });\n  }\n  return textComponent;\n}\nvar _TextFormat = class {\n  constructor(key, value, name, code, cssForeground, cssBackground) {\n    this.key = key;\n    this.value = value;\n    this.name = name;\n    this.code = code;\n    this.cssForeground = cssForeground;\n    this.cssBackground = cssBackground;\n  }\n  applyToStyle(style) {\n    style[this.key] = this.value;\n  }\n  matchStyle(style) {\n    return style[this.key] === this.value;\n  }\n  /**\n     * Get the text format from text code\n     * @param code The text code character like 0, 1, 2\n     * @returns The TextFormat instance\n     */\n  static fromCode(code) {\n    const seq = \"0123456789abcdefklmnor\";\n    const index = seq.indexOf(code);\n    if (!index) {\n      return void 0;\n    }\n    return this.list[index];\n  }\n  toString() {\n    return `${_TextFormat.CONTROL_STRING}${this.code}`;\n  }\n};\nvar TextFormat = _TextFormat;\n__publicField(TextFormat, \"CONTROL_STRING\", \"\\xA7\");\n__publicField(TextFormat, \"BLACK\", new _TextFormat(\"color\", \"black\", \"BLACK\", \"0\", { color: \"#000000\" }, { color: \"#000000\" }));\n__publicField(TextFormat, \"DARK_BLUE\", new _TextFormat(\"color\", \"dark_blue\", \"DARK_BLUE\", \"1\", { color: \"#0000AA\" }, { color: \"#00002A\" }));\n__publicField(TextFormat, \"DARK_GREEN\", new _TextFormat(\"color\", \"dark_green\", \"DARK_GREEN\", \"2\", { color: \"#00AA00\" }, { color: \"#002A00\" }));\n__publicField(TextFormat, \"DARK_AQUA\", new _TextFormat(\"color\", \"dark_aqua\", \"DARK_AQUA\", \"3\", { color: \"#00AAAA\" }, { color: \"#002A2A\" }));\n__publicField(TextFormat, \"DARK_RED\", new _TextFormat(\"color\", \"dark_red\", \"DARK_RED\", \"4\", { color: \"#AA0000\" }, { color: \"#2A0000\" }));\n__publicField(TextFormat, \"DARK_PURPLE\", new _TextFormat(\"color\", \"dark_purple\", \"DARK_PURPLE\", \"5\", { color: \"#AA00AA\" }, { color: \"#2A002A\" }));\n__publicField(TextFormat, \"GOLD\", new _TextFormat(\"color\", \"gold\", \"GOLD\", \"6\", { color: \"#FFAA00\" }, { color: \"#2A2A00\" }));\n__publicField(TextFormat, \"GRAY\", new _TextFormat(\"color\", \"gray\", \"GRAY\", \"7\", { color: \"#AAAAAA\" }, { color: \"#2A2A2A\" }));\n__publicField(TextFormat, \"DARK_GRAY\", new _TextFormat(\"color\", \"dark_gray\", \"DARK_GRAY\", \"8\", { color: \"#555555\" }, { color: \"#151515\" }));\n__publicField(TextFormat, \"BLUE\", new _TextFormat(\"color\", \"blue\", \"BLUE\", \"9\", { color: \"#5555FF\" }, { color: \"#15153F\" }));\n__publicField(TextFormat, \"GREEN\", new _TextFormat(\"color\", \"green\", \"GREEN\", \"a\", { color: \"#55FF55\" }, { color: \"#153F15\" }));\n__publicField(TextFormat, \"AQUA\", new _TextFormat(\"color\", \"aqua\", \"AQUA\", \"b\", { color: \"#55FFFF\" }, { color: \"#153F3F\" }));\n__publicField(TextFormat, \"RED\", new _TextFormat(\"color\", \"red\", \"RED\", \"c\", { color: \"#FF5555\" }, { color: \"#3F1515\" }));\n__publicField(TextFormat, \"LIGHT_PURPLE\", new _TextFormat(\"color\", \"light_purple\", \"LIGHT_PURPLE\", \"d\", { color: \"#FF55FF\" }, { color: \"#3F153F\" }));\n__publicField(TextFormat, \"YELLOW\", new _TextFormat(\"color\", \"yellow\", \"YELLOW\", \"e\", { color: \"#FFFF55\" }, { color: \"#3F3F15\" }));\n__publicField(TextFormat, \"WHITE\", new _TextFormat(\"color\", \"white\", \"WHITE\", \"f\", { color: \"#FFFFFF\" }, { color: \"#3F3F3F\" }));\n__publicField(TextFormat, \"OBFUSCATED\", new _TextFormat(\"obfuscated\", true, \"OBFUSCATED\", \"k\", {}));\n__publicField(TextFormat, \"BOLD\", new _TextFormat(\"bold\", true, \"BOLD\", \"l\", { \"font-weight\": \"bold\" }));\n__publicField(TextFormat, \"STRIKETHROUGH\", new _TextFormat(\"strikethrough\", true, \"STRIKETHROUGH\", \"m\", { \"text-decoration\": \"line-through\" }));\n__publicField(TextFormat, \"UNDERLINE\", new _TextFormat(\"underlined\", true, \"UNDERLINE\", \"n\", { \"text-decoration\": \"underline\" }));\n__publicField(TextFormat, \"ITALIC\", new _TextFormat(\"italic\", true, \"ITALIC\", \"o\", { \"font-style\": \"italic\" }));\n__publicField(TextFormat, \"RESET\", {\n  name: \"RESET\",\n  code: \"r\",\n  applyToStyle(style) {\n    style.bold = false;\n    style.strikethrough = false;\n    style.underlined = false;\n    style.italic = false;\n    style.obfuscated = false;\n    style.color = void 0;\n  },\n  matchStyle(style) {\n    return false;\n  },\n  cssBackground: {},\n  cssForeground: {},\n  toString() {\n    return `${_TextFormat.CONTROL_STRING}r`;\n  }\n});\n__publicField(TextFormat, \"list\", [\n  _TextFormat.BLACK,\n  _TextFormat.DARK_BLUE,\n  _TextFormat.DARK_GREEN,\n  _TextFormat.DARK_AQUA,\n  _TextFormat.DARK_RED,\n  _TextFormat.DARK_PURPLE,\n  _TextFormat.GOLD,\n  _TextFormat.GRAY,\n  _TextFormat.DARK_GRAY,\n  _TextFormat.BLUE,\n  _TextFormat.GREEN,\n  _TextFormat.AQUA,\n  _TextFormat.RED,\n  _TextFormat.LIGHT_PURPLE,\n  _TextFormat.YELLOW,\n  _TextFormat.WHITE,\n  _TextFormat.OBFUSCATED,\n  _TextFormat.BOLD,\n  _TextFormat.STRIKETHROUGH,\n  _TextFormat.UNDERLINE,\n  _TextFormat.ITALIC,\n  _TextFormat.RESET\n]);\nexport {\n  flat,\n  fromFormattedString,\n  getStyleCode,\n  getSuggestedStyle,\n  render,\n  toFormattedString\n};\n//# sourceMappingURL=index.mjs.map\n","// this should actually be moved to mineflayer / prismarine-viewer\n\nimport { fromFormattedString, TextComponent } from '@xmcl/text-component'\n\nexport type MessageFormatPart = Pick<TextComponent, 'hoverEvent' | 'clickEvent'> & {\n  text: string\n  color?: string\n  bold?: boolean\n  italic?: boolean\n  underlined?: boolean\n  strikethrough?: boolean\n  obfuscated?: boolean\n}\n\ntype MessageInput = {\n  text?: string\n  translate?: string\n  with?: Array<MessageInput | string>\n  color?: string\n  bold?: boolean\n  italic?: boolean\n  underlined?: boolean\n  strikethrough?: boolean\n  obfuscated?: boolean\n  extra?: MessageInput[]\n  json?: any\n}\n\n// todo move to sign-renderer, replace with prismarine-chat\nexport const formatMessage = (message: MessageInput) => {\n  let msglist: MessageFormatPart[] = []\n\n  const readMsg = (msg: MessageInput) => {\n    const styles = {\n      color: msg.color,\n      bold: !!msg.bold,\n      italic: !!msg.italic,\n      underlined: !!msg.underlined,\n      strikethrough: !!msg.strikethrough,\n      obfuscated: !!msg.obfuscated\n    }\n\n    if (msg.text) {\n      msglist.push({\n        ...msg,\n        text: msg.text,\n        ...styles\n      })\n    } else if (msg.translate) {\n      const tText = window.loadedData.language[msg.translate] ?? msg.translate\n\n      if (msg.with) {\n        const splitted = tText.split(/%s|%\\d+\\$s/g)\n\n        let i = 0\n        for (const [j, part] of splitted.entries()) {\n          msglist.push({ text: part, ...styles })\n\n          if (j + 1 < splitted.length) {\n            if (msg.with[i]) {\n              const msgWith = msg.with[i]\n              if (typeof msgWith === 'string') {\n                readMsg({\n                  ...styles,\n                  text: msgWith\n                })\n              } else {\n                readMsg({\n                  ...styles,\n                  ...msgWith\n                })\n              }\n            }\n            i++\n          }\n        }\n      } else {\n        msglist.push({\n          ...msg,\n          text: tText,\n          ...styles\n        })\n      }\n    }\n\n    if (msg.extra) {\n      for (const ex of msg.extra) {\n        readMsg({ ...styles, ...ex })\n      }\n    }\n  }\n\n  readMsg(message)\n\n  const flat = (msg) => {\n    return [msg, msg.extra?.flatMap(flat) ?? []]\n  }\n\n  msglist = msglist.map(msg => {\n    // normalize §\n    if (!msg.text.includes('§')) return msg\n    const newMsg = fromFormattedString(msg.text)\n    return flat(newMsg)\n  }).flat(Infinity)\n\n  return msglist\n}\n\nconst blockToItemRemaps = {\n  water: 'water_bucket',\n  lava: 'lava_bucket',\n  redstone_wire: 'redstone',\n  tripwire: 'tripwire_hook'\n}\n\nexport const getItemFromBlock = (block: import('prismarine-block').Block) => {\n  const item = loadedData.items[blockToItemRemaps[block.name] ?? block.name]\n  return item\n}\n","// Regexps involved with splitting words in various case formats.\nconst SPLIT_LOWER_UPPER_RE = /([\\p{Ll}\\d])(\\p{Lu})/gu;\nconst SPLIT_UPPER_UPPER_RE = /(\\p{Lu})([\\p{Lu}][\\p{Ll}])/gu;\nconst SPLIT_NUMBER_LOWER_RE = /(\\d)(\\p{Ll})/gu;\nconst SPLIT_LETTER_NUMBER_RE = /(\\p{L})(\\d)/gu;\n// Regexp involved with stripping non-word characters from the result.\nconst DEFAULT_STRIP_REGEXP = /[^\\p{L}\\d]+/giu;\n// The replacement value for splits.\nconst SPLIT_REPLACE_VALUE = \"$1\\0$2\";\n// The default characters to keep after transforming case.\nconst DEFAULT_PREFIX_CHARACTERS = \"\";\n/**\n * Split any cased input strings into an array of words.\n */\nexport function split(input, options = {}) {\n    const { separateNumbers } = options;\n    let result = input.trim();\n    result = result\n        .replace(SPLIT_LOWER_UPPER_RE, SPLIT_REPLACE_VALUE)\n        .replace(SPLIT_UPPER_UPPER_RE, SPLIT_REPLACE_VALUE);\n    if (separateNumbers) {\n        result = result\n            .replace(SPLIT_NUMBER_LOWER_RE, SPLIT_REPLACE_VALUE)\n            .replace(SPLIT_LETTER_NUMBER_RE, SPLIT_REPLACE_VALUE);\n    }\n    result = result.replace(DEFAULT_STRIP_REGEXP, \"\\0\");\n    let start = 0;\n    let end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    if (start === end)\n        return [];\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    return result.slice(start, end).split(/\\0/g);\n}\n/**\n * Convert a string to space separated lower case (`foo bar`).\n */\nexport function noCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    return (prefix +\n        split(input, options)\n            .map(lowerFactory(options?.locale))\n            .join(\" \"));\n}\n/**\n * Convert a string to camel case (`fooBar`).\n */\nexport function camelCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    const transform = pascalCaseTransformFactory(lower, upper);\n    return (prefix +\n        split(input, options)\n            .map((word, index) => {\n            if (index === 0)\n                return lower(word);\n            return transform(word, index);\n        })\n            .join(\"\"));\n}\n/**\n * Convert a string to pascal case (`FooBar`).\n */\nexport function pascalCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    return (prefix +\n        split(input, options).map(pascalCaseTransformFactory(lower, upper)).join(\"\"));\n}\n/**\n * Convert a string to pascal snake case (`Foo_Bar`).\n */\nexport function pascalSnakeCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    return (prefix +\n        split(input, options)\n            .map(capitalCaseTransformFactory(lower, upper))\n            .join(\"_\"));\n}\n/**\n * Convert a string to capital case (`Foo Bar`).\n */\nexport function capitalCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    return (prefix +\n        split(input, options)\n            .map(capitalCaseTransformFactory(lower, upper))\n            .join(\" \"));\n}\n/**\n * Convert a string to constant case (`FOO_BAR`).\n */\nexport function constantCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const upper = upperFactory(options?.locale);\n    return prefix + split(input, options).map(upper).join(\"_\");\n}\n/**\n * Convert a string to dot case (`foo.bar`).\n */\nexport function dotCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    return prefix + split(input, options).map(lower).join(\".\");\n}\n/**\n * Convert a string to kebab case (`foo-bar`).\n */\nexport function kebabCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    return prefix + split(input, options).map(lower).join(\"-\");\n}\n/**\n * Convert a string to path case (`foo/bar`).\n */\nexport function pathCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    return prefix + split(input, options).map(lower).join(\"/\");\n}\n/**\n * Convert a string to path case (`Foo bar`).\n */\nexport function sentenceCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    const transform = capitalCaseTransformFactory(lower, upper);\n    return (prefix +\n        split(input, options)\n            .map((word, index) => {\n            if (index === 0)\n                return transform(word);\n            return lower(word);\n        })\n            .join(\" \"));\n}\n/**\n * Convert a string to snake case (`foo_bar`).\n */\nexport function snakeCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    return prefix + split(input, options).map(lower).join(\"_\");\n}\n/**\n * Convert a string to header case (`Foo-Bar`).\n */\nexport function trainCase(input, options) {\n    const prefix = getPrefix(input, options?.prefixCharacters);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    return (prefix +\n        split(input, options)\n            .map(capitalCaseTransformFactory(lower, upper))\n            .join(\"-\"));\n}\nfunction lowerFactory(locale) {\n    return locale === false\n        ? (input) => input.toLowerCase()\n        : (input) => input.toLocaleLowerCase(locale);\n}\nfunction upperFactory(locale) {\n    return locale === false\n        ? (input) => input.toUpperCase()\n        : (input) => input.toLocaleUpperCase(locale);\n}\nfunction capitalCaseTransformFactory(lower, upper) {\n    return (word) => `${upper(word[0])}${lower(word.slice(1))}`;\n}\nfunction pascalCaseTransformFactory(lower, upper) {\n    return (word, index) => {\n        const char0 = word[0];\n        const initial = index > 0 && char0 >= \"0\" && char0 <= \"9\" ? \"_\" + char0 : upper(char0);\n        return initial + lower(word.slice(1));\n    };\n}\nfunction getPrefix(input, prefixCharacters = DEFAULT_PREFIX_CHARACTERS) {\n    let prefix = \"\";\n    for (let i = 0; i < input.length; i++) {\n        const char = input.charAt(i);\n        if (prefixCharacters.includes(char)) {\n            prefix += char;\n        }\n        else {\n            break;\n        }\n    }\n    return prefix;\n}\n//# sourceMappingURL=index.js.map","(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n","// Generated automatically by nearley, version 2.20.1\n// http://github.com/Hardmath123/nearley\n(function () {\nfunction id(x) { return x[0]; }\n\n\n// Because of unquoted strings, parsing can be ambiguous.\n// It is more efficient to have the parser extract string\n// and post-process it to retrieve numbers\nfunction parseValue (str) {\n  if (str === 'true') return { type: 'boolean', value: true }\n  if (str === 'false') return { type: 'boolean', value: false }\n  const suffixes = \"bslfdi\"\n  const suffixToType = { 'b': 'byte', 's': 'short', 'l': 'long', 'f': 'float', 'd': 'double', 'i': 'int' }\n  const lastC = str.charAt(str.length - 1).toLowerCase()\n  if (suffixes.indexOf(lastC) !== -1) {\n    const v = parseFloat(str.substring(0, str.length - 1))\n    if (!isNaN(v)) return { value: v, type: suffixToType[lastC]}\n    return { value: str, type: 'string' }\n  }\n  // When no letter is used and Minecraft can't tell the type from context,\n  // it assumes double if there's a decimal point, int if there's no decimal\n  // point and the size fits within 32 bits, or string if neither is true.\n  // https://minecraft.gamepedia.com/Commands#Data_tags\n  const v = parseFloat(str)\n  const decimal = str.includes('.')\n  const isInt32 = (v >> 0) === v\n  if (!isNaN(str) && (decimal || isInt32)) return { value: v, type: decimal ? 'double' : 'int'}\n  return { value: str, type: 'string' }\n}\n\nfunction extractPair(kv, output) {\n  if (kv[0] !== undefined) {\n    output[kv[0]] = kv[1]\n  }\n}\n\nfunction extractObject(d) {\n  let output = {}\n  extractPair(d[2], output)\n  for (let i in d[3]) {\n    extractPair(d[3][i][3], output)\n  }\n  return { type: 'compound', value: output }\n}\n\nfunction extractTypedArray (d) {\n  let output = [d[6]]\n  for (let i in d[7]) {\n    output.push(d[7][i][3])\n  }\n  const type = {'B': 'byteArray', 'I': 'intArray', 'L': 'longArray'}[d[2]]\n  return { type, value: { type: output[0].type, value: output.map(x => x.value) } }\n}\n\nfunction extractArray (d) {\n  let output = [d[2]]\n  for (let i in d[3]) {\n    output.push(d[3][i][3])\n  }\n  return { type: 'list', value: { type: output[0].type, value: output.map(x => x.value) } }\n}\n\nfunction extractArrayPair (d) {\n  let output = []\n  extractPair(d[2], output)\n  for (let i in d[3]) {\n    extractPair(d[3][i][3], output)\n  }\n  return { type: 'list', value: { type: output[0].type, value: output.map(x => x.value) } }\n}\n\nvar grammar = {\n    Lexer: undefined,\n    ParserRules: [\n    {\"name\": \"_$ebnf$1\", \"symbols\": []},\n    {\"name\": \"_$ebnf$1\", \"symbols\": [\"_$ebnf$1\", \"wschar\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"_\", \"symbols\": [\"_$ebnf$1\"], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"__$ebnf$1\", \"symbols\": [\"wschar\"]},\n    {\"name\": \"__$ebnf$1\", \"symbols\": [\"__$ebnf$1\", \"wschar\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"__\", \"symbols\": [\"__$ebnf$1\"], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"wschar\", \"symbols\": [/[ \\t\\n\\v\\f]/], \"postprocess\": id},\n    {\"name\": \"MAIN\", \"symbols\": [\"_\", \"JVALUE\", \"_\"], \"postprocess\": (d) => d[1]},\n    {\"name\": \"JVALUE\", \"symbols\": [\"JOBJECT\"], \"postprocess\": (d) => d[0]},\n    {\"name\": \"JVALUE\", \"symbols\": [{\"literal\":\"'\"}, \"_\", \"JOBJECT\", \"_\", {\"literal\":\"'\"}], \"postprocess\": (d) => d[2]},\n    {\"name\": \"JVALUE\", \"symbols\": [\"JARRAY\"], \"postprocess\": (d) => d[0]},\n    {\"name\": \"JVALUE\", \"symbols\": [\"STRING\"], \"postprocess\": (d) => d[0]},\n    {\"name\": \"JVALUE$string$1\", \"symbols\": [{\"literal\":\"n\"}, {\"literal\":\"u\"}, {\"literal\":\"l\"}, {\"literal\":\"l\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"JVALUE\", \"symbols\": [\"JVALUE$string$1\"], \"postprocess\": (d) => null},\n    {\"name\": \"JOBJECT\", \"symbols\": [{\"literal\":\"{\"}, \"_\", {\"literal\":\"}\"}], \"postprocess\": (d) => { return { type: 'compound', value: {} } }},\n    {\"name\": \"JOBJECT$ebnf$1\", \"symbols\": []},\n    {\"name\": \"JOBJECT$ebnf$1$subexpression$1\", \"symbols\": [\"_\", {\"literal\":\",\"}, \"_\", \"PAIR\"]},\n    {\"name\": \"JOBJECT$ebnf$1\", \"symbols\": [\"JOBJECT$ebnf$1\", \"JOBJECT$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"JOBJECT$ebnf$2$subexpression$1\", \"symbols\": [\"_\", {\"literal\":\",\"}]},\n    {\"name\": \"JOBJECT$ebnf$2\", \"symbols\": [\"JOBJECT$ebnf$2$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"JOBJECT$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"JOBJECT\", \"symbols\": [{\"literal\":\"{\"}, \"_\", \"PAIR\", \"JOBJECT$ebnf$1\", \"JOBJECT$ebnf$2\", {\"literal\":\"}\"}], \"postprocess\": extractObject},\n    {\"name\": \"JARRAY\", \"symbols\": [{\"literal\":\"[\"}, \"_\", {\"literal\":\"]\"}], \"postprocess\": (d) => { return { type: 'list', value: {} } }},\n    {\"name\": \"JARRAY$ebnf$1\", \"symbols\": []},\n    {\"name\": \"JARRAY$ebnf$1$subexpression$1\", \"symbols\": [\"_\", {\"literal\":\",\"}, \"_\", \"JVALUE\"]},\n    {\"name\": \"JARRAY$ebnf$1\", \"symbols\": [\"JARRAY$ebnf$1\", \"JARRAY$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"JARRAY$ebnf$2$subexpression$1\", \"symbols\": [\"_\", {\"literal\":\",\"}]},\n    {\"name\": \"JARRAY$ebnf$2\", \"symbols\": [\"JARRAY$ebnf$2$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"JARRAY$ebnf$2\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"JARRAY\", \"symbols\": [{\"literal\":\"[\"}, \"_\", /[BIL]/, \"_\", {\"literal\":\";\"}, \"_\", \"JVALUE\", \"JARRAY$ebnf$1\", \"JARRAY$ebnf$2\", \"_\", {\"literal\":\"]\"}], \"postprocess\": extractTypedArray},\n    {\"name\": \"JARRAY$ebnf$3\", \"symbols\": []},\n    {\"name\": \"JARRAY$ebnf$3$subexpression$1\", \"symbols\": [\"_\", {\"literal\":\",\"}, \"_\", \"JVALUE\"]},\n    {\"name\": \"JARRAY$ebnf$3\", \"symbols\": [\"JARRAY$ebnf$3\", \"JARRAY$ebnf$3$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"JARRAY$ebnf$4$subexpression$1\", \"symbols\": [\"_\", {\"literal\":\",\"}]},\n    {\"name\": \"JARRAY$ebnf$4\", \"symbols\": [\"JARRAY$ebnf$4$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"JARRAY$ebnf$4\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"JARRAY\", \"symbols\": [{\"literal\":\"[\"}, \"_\", \"JVALUE\", \"JARRAY$ebnf$3\", \"JARRAY$ebnf$4\", \"_\", {\"literal\":\"]\"}], \"postprocess\": extractArray},\n    {\"name\": \"JARRAY$ebnf$5\", \"symbols\": []},\n    {\"name\": \"JARRAY$ebnf$5$subexpression$1\", \"symbols\": [\"_\", {\"literal\":\",\"}, \"_\", \"PAIR\"]},\n    {\"name\": \"JARRAY$ebnf$5\", \"symbols\": [\"JARRAY$ebnf$5\", \"JARRAY$ebnf$5$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"JARRAY$ebnf$6$subexpression$1\", \"symbols\": [\"_\", {\"literal\":\",\"}]},\n    {\"name\": \"JARRAY$ebnf$6\", \"symbols\": [\"JARRAY$ebnf$6$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"JARRAY$ebnf$6\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"JARRAY\", \"symbols\": [{\"literal\":\"[\"}, \"_\", \"PAIR\", \"JARRAY$ebnf$5\", \"JARRAY$ebnf$6\", \"_\", {\"literal\":\"]\"}], \"postprocess\": extractArrayPair},\n    {\"name\": \"PAIR\", \"symbols\": [\"STRING\", \"_\", {\"literal\":\":\"}, \"_\", \"JVALUE\"], \"postprocess\": (d) => [d[0].value, d[4]]},\n    {\"name\": \"STRING$ebnf$1\", \"symbols\": []},\n    {\"name\": \"STRING$ebnf$1$subexpression$1\", \"symbols\": [/[^\\\\\"]/]},\n    {\"name\": \"STRING$ebnf$1$subexpression$1\", \"symbols\": [{\"literal\":\"\\\\\"}, /[\"bfnrt\\/\\\\]/]},\n    {\"name\": \"STRING$ebnf$1$subexpression$1$string$1\", \"symbols\": [{\"literal\":\"\\\\\"}, {\"literal\":\"u\"}], \"postprocess\": function joiner(d) {return d.join('');}},\n    {\"name\": \"STRING$ebnf$1$subexpression$1\", \"symbols\": [\"STRING$ebnf$1$subexpression$1$string$1\", /[a-fA-F0-9]/, /[a-fA-F0-9]/, /[a-fA-F0-9]/, /[a-fA-F0-9]/]},\n    {\"name\": \"STRING$ebnf$1\", \"symbols\": [\"STRING$ebnf$1\", \"STRING$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"STRING\", \"symbols\": [{\"literal\":\"\\\"\"}, \"STRING$ebnf$1\", {\"literal\":\"\\\"\"}], \"postprocess\": (d) => parseValue( JSON.parse(d.flat(3).map(b => b.replace('\\n', '\\\\n')).join('')) )},\n    {\"name\": \"STRING$ebnf$2\", \"symbols\": [/[^\\\"\\'}\\]:;,\\s]/]},\n    {\"name\": \"STRING$ebnf$2\", \"symbols\": [\"STRING$ebnf$2\", /[^\\\"\\'}\\]:;,\\s]/], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"STRING\", \"symbols\": [\"STRING$ebnf$2\"], \"postprocess\": (d) => parseValue(d[0].join(''))}\n]\n  , ParserStart: \"MAIN\"\n}\nif (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {\n   module.exports = grammar;\n} else {\n   window.grammar = grammar;\n}\n})();\n","const nearley = require('nearley')\nconst grammar = require('./grammar')\n\nfunction simplify (data) {\n  function transform (value, type) {\n    if (type === 'compound') {\n      return Object.keys(value).reduce(function (acc, key) {\n        acc[key] = simplify(value[key])\n        return acc\n      }, {})\n    }\n    if (type === 'list') {\n      if (!Array.isArray(value.value)) return []\n      return value.value.map(function (v) { return transform(v, value.type) })\n    }\n    return value\n  }\n  return transform(data.value, data.type)\n}\n\nfunction stringify ({ value, type }) {\n  if (type === 'compound') {\n    const str = []\n    const entries = Object.entries(value)\n    for (let i = 0; i < entries.length; i++) {\n      const _type = entries[i][0]\n      let _value = stringify(entries[i][1])\n      if (_type === 'string') _value = normalizeString(_value)\n      str.push(`${_type}:${_value}`)\n    }\n    return `{${str.join(',')}}`\n  } else if (type === 'list') {\n    if (!Array.isArray(value.value)) return '[]'\n    const arrayElements = getArrayValues(value)\n    return `[${arrayElements}]`\n  } else if (type === 'byteArray' || type === 'intArray' || type === 'longArray') {\n    const prefix = getArrayPrefix(type)\n    const arrayElements = getArrayValues(value)\n    return `[${prefix}${arrayElements}]`\n  }\n  let str = value + getSuffix(value, type)\n  if (type === 'string') str = normalizeString(str)\n  return str\n}\n\nfunction normalizeString (str) {\n  str = str.replace(/\"/g, '\\\\\"')\n  if (/'|{|}|\\[|\\]|:|;|,|\\(|\\)|§|=/g.test(str) || str === '') str = `\"${str}\"`\n  return str\n}\n\nfunction getArrayValues ({ value: arr, type }) {\n  const hasMissingEl = hasMissingElements(arr)\n  const str = []\n  // add nullable length that way [] is pased as []\n  for (let i = 0; i < arr.length; i++) {\n    let curr = arr[i]\n    if (curr !== undefined) {\n      curr = stringify({ value: curr, type })\n      if (hasMissingEl) str.push(`${i}:${curr}`)\n      else str.push(curr)\n    }\n  }\n  return str.join(',')\n}\n\nfunction hasMissingElements (arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === undefined) return true\n  }\n  return false\n}\n\nconst getArrayPrefix = type => type.charAt(0).toUpperCase() + ';'\n\nfunction getSuffix (val, type) {\n  if (type === 'double') return ((val >> 0) === val) ? 'd' : ''\n  return { int: '', byte: 'b', short: 's', float: 'f', long: 'l', string: '' }[type]\n}\n\n/**\n * @description normalizes the input aka makes it the shortest equivalent string\n * @param {string} str the string of mojangson to normalize\n * @returns {string} the normalized mojangson\n */\n\nfunction normalize (str) {\n  return stringify(parse(str))\n}\n\nfunction parse (text) {\n  try {\n    const parserNE = new nearley.Parser(nearley.Grammar.fromCompiled(grammar))\n    parserNE.feed(text)\n    return parserNE.results[0]\n  } catch (e) {\n    e.message = `Error parsing text '${text}'`\n    throw e\n  }\n}\n\nmodule.exports = {\n  parse,\n  simplify,\n  stringify,\n  normalize\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=window,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),n=new WeakMap;class o{constructor(t,e,n){if(this._$cssResult$=!0,n!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=n.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&n.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new o(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const n=1===t.length?t[0]:e.reduce(((e,s,n)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[n+1]),t[0]);return new o(n,t,s)},S=(s,n)=>{e?s.adoptedStyleSheets=n.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet)):n.forEach((e=>{const n=document.createElement(\"style\"),o=t.litNonce;void 0!==o&&n.setAttribute(\"nonce\",o),n.textContent=e.cssText,s.appendChild(n)}))},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{o as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as i}from\"./css-tag.js\";export{CSSResult,adoptStyles,css,getCompatibleStyle,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var s;const e=window,r=e.trustedTypes,h=r?r.emptyScript:\"\",o=e.reactiveElementPolyfillSupport,n={toAttribute(t,i){switch(i){case Boolean:t=t?h:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,i){let s=t;switch(i){case Boolean:s=null!==t;break;case Number:s=null===t?null:Number(t);break;case Object:case Array:try{s=JSON.parse(t)}catch(t){s=null}}return s}},a=(t,i)=>i!==t&&(i==i||t==t),l={attribute:!0,type:String,converter:n,reflect:!1,hasChanged:a},d=\"finalized\";class u extends HTMLElement{constructor(){super(),this._$Ei=new Map,this.isUpdatePending=!1,this.hasUpdated=!1,this._$El=null,this._$Eu()}static addInitializer(t){var i;this.finalize(),(null!==(i=this.h)&&void 0!==i?i:this.h=[]).push(t)}static get observedAttributes(){this.finalize();const t=[];return this.elementProperties.forEach(((i,s)=>{const e=this._$Ep(s,i);void 0!==e&&(this._$Ev.set(e,s),t.push(e))})),t}static createProperty(t,i=l){if(i.state&&(i.attribute=!1),this.finalize(),this.elementProperties.set(t,i),!i.noAccessor&&!this.prototype.hasOwnProperty(t)){const s=\"symbol\"==typeof t?Symbol():\"__\"+t,e=this.getPropertyDescriptor(t,s,i);void 0!==e&&Object.defineProperty(this.prototype,t,e)}}static getPropertyDescriptor(t,i,s){return{get(){return this[i]},set(e){const r=this[t];this[i]=e,this.requestUpdate(t,r,s)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)||l}static finalize(){if(this.hasOwnProperty(d))return!1;this[d]=!0;const t=Object.getPrototypeOf(this);if(t.finalize(),void 0!==t.h&&(this.h=[...t.h]),this.elementProperties=new Map(t.elementProperties),this._$Ev=new Map,this.hasOwnProperty(\"properties\")){const t=this.properties,i=[...Object.getOwnPropertyNames(t),...Object.getOwnPropertySymbols(t)];for(const s of i)this.createProperty(s,t[s])}return this.elementStyles=this.finalizeStyles(this.styles),!0}static finalizeStyles(i){const s=[];if(Array.isArray(i)){const e=new Set(i.flat(1/0).reverse());for(const i of e)s.unshift(t(i))}else void 0!==i&&s.push(t(i));return s}static _$Ep(t,i){const s=i.attribute;return!1===s?void 0:\"string\"==typeof s?s:\"string\"==typeof t?t.toLowerCase():void 0}_$Eu(){var t;this._$E_=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$Eg(),this.requestUpdate(),null===(t=this.constructor.h)||void 0===t||t.forEach((t=>t(this)))}addController(t){var i,s;(null!==(i=this._$ES)&&void 0!==i?i:this._$ES=[]).push(t),void 0!==this.renderRoot&&this.isConnected&&(null===(s=t.hostConnected)||void 0===s||s.call(t))}removeController(t){var i;null===(i=this._$ES)||void 0===i||i.splice(this._$ES.indexOf(t)>>>0,1)}_$Eg(){this.constructor.elementProperties.forEach(((t,i)=>{this.hasOwnProperty(i)&&(this._$Ei.set(i,this[i]),delete this[i])}))}createRenderRoot(){var t;const s=null!==(t=this.shadowRoot)&&void 0!==t?t:this.attachShadow(this.constructor.shadowRootOptions);return i(s,this.constructor.elementStyles),s}connectedCallback(){var t;void 0===this.renderRoot&&(this.renderRoot=this.createRenderRoot()),this.enableUpdating(!0),null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostConnected)||void 0===i?void 0:i.call(t)}))}enableUpdating(t){}disconnectedCallback(){var t;null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostDisconnected)||void 0===i?void 0:i.call(t)}))}attributeChangedCallback(t,i,s){this._$AK(t,s)}_$EO(t,i,s=l){var e;const r=this.constructor._$Ep(t,s);if(void 0!==r&&!0===s.reflect){const h=(void 0!==(null===(e=s.converter)||void 0===e?void 0:e.toAttribute)?s.converter:n).toAttribute(i,s.type);this._$El=t,null==h?this.removeAttribute(r):this.setAttribute(r,h),this._$El=null}}_$AK(t,i){var s;const e=this.constructor,r=e._$Ev.get(t);if(void 0!==r&&this._$El!==r){const t=e.getPropertyOptions(r),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==(null===(s=t.converter)||void 0===s?void 0:s.fromAttribute)?t.converter:n;this._$El=r,this[r]=h.fromAttribute(i,t.type),this._$El=null}}requestUpdate(t,i,s){let e=!0;void 0!==t&&(((s=s||this.constructor.getPropertyOptions(t)).hasChanged||a)(this[t],i)?(this._$AL.has(t)||this._$AL.set(t,i),!0===s.reflect&&this._$El!==t&&(void 0===this._$EC&&(this._$EC=new Map),this._$EC.set(t,s))):e=!1),!this.isUpdatePending&&e&&(this._$E_=this._$Ej())}async _$Ej(){this.isUpdatePending=!0;try{await this._$E_}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){var t;if(!this.isUpdatePending)return;this.hasUpdated,this._$Ei&&(this._$Ei.forEach(((t,i)=>this[i]=t)),this._$Ei=void 0);let i=!1;const s=this._$AL;try{i=this.shouldUpdate(s),i?(this.willUpdate(s),null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostUpdate)||void 0===i?void 0:i.call(t)})),this.update(s)):this._$Ek()}catch(t){throw i=!1,this._$Ek(),t}i&&this._$AE(s)}willUpdate(t){}_$AE(t){var i;null===(i=this._$ES)||void 0===i||i.forEach((t=>{var i;return null===(i=t.hostUpdated)||void 0===i?void 0:i.call(t)})),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$Ek(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$E_}shouldUpdate(t){return!0}update(t){void 0!==this._$EC&&(this._$EC.forEach(((t,i)=>this._$EO(i,this[i],t))),this._$EC=void 0),this._$Ek()}updated(t){}firstUpdated(t){}}u[d]=!0,u.elementProperties=new Map,u.elementStyles=[],u.shadowRootOptions={mode:\"open\"},null==o||o({ReactiveElement:u}),(null!==(s=e.reactiveElementVersions)&&void 0!==s?s:e.reactiveElementVersions=[]).push(\"1.6.3\");export{u as ReactiveElement,n as defaultConverter,a as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=window,s=i.trustedTypes,e=s?s.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,o=\"$lit$\",n=`lit$${(Math.random()+\"\").slice(9)}$`,l=\"?\"+n,h=`<${l}>`,r=document,u=()=>r.createComment(\"\"),d=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,c=Array.isArray,v=t=>c(t)||\"function\"==typeof(null==t?void 0:t[Symbol.iterator]),a=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,_=/-->/g,m=/>/g,p=RegExp(`>|${a}(?:([^\\\\s\"'>=/]+)(${a}*=${a}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),g=/'/g,$=/\"/g,y=/^(?:script|style|textarea|title)$/i,w=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=w(1),b=w(2),T=Symbol.for(\"lit-noChange\"),A=Symbol.for(\"lit-nothing\"),E=new WeakMap,C=r.createTreeWalker(r,129,null,!1);function P(t,i){if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==e?e.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,e=[];let l,r=2===i?\"<svg>\":\"\",u=f;for(let i=0;i<s;i++){const s=t[i];let d,c,v=-1,a=0;for(;a<s.length&&(u.lastIndex=a,c=u.exec(s),null!==c);)a=u.lastIndex,u===f?\"!--\"===c[1]?u=_:void 0!==c[1]?u=m:void 0!==c[2]?(y.test(c[2])&&(l=RegExp(\"</\"+c[2],\"g\")),u=p):void 0!==c[3]&&(u=p):u===p?\">\"===c[0]?(u=null!=l?l:f,v=-1):void 0===c[1]?v=-2:(v=u.lastIndex-c[2].length,d=c[1],u=void 0===c[3]?p:'\"'===c[3]?$:g):u===$||u===g?u=p:u===_||u===m?u=f:(u=p,l=void 0);const w=u===p&&t[i+1].startsWith(\"/>\")?\" \":\"\";r+=u===f?s+h:v>=0?(e.push(d),s.slice(0,v)+o+s.slice(v)+n+w):s+n+(-2===v?(e.push(void 0),i):w)}return[P(t,r+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\")),e]};class N{constructor({strings:t,_$litType$:i},e){let h;this.parts=[];let r=0,d=0;const c=t.length-1,v=this.parts,[a,f]=V(t,i);if(this.el=N.createElement(a,e),C.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(h=C.nextNode())&&v.length<c;){if(1===h.nodeType){if(h.hasAttributes()){const t=[];for(const i of h.getAttributeNames())if(i.endsWith(o)||i.startsWith(n)){const s=f[d++];if(t.push(i),void 0!==s){const t=h.getAttribute(s.toLowerCase()+o).split(n),i=/([.?@])?(.*)/.exec(s);v.push({type:1,index:r,name:i[2],strings:t,ctor:\".\"===i[1]?H:\"?\"===i[1]?L:\"@\"===i[1]?z:k})}else v.push({type:6,index:r})}for(const i of t)h.removeAttribute(i)}if(y.test(h.tagName)){const t=h.textContent.split(n),i=t.length-1;if(i>0){h.textContent=s?s.emptyScript:\"\";for(let s=0;s<i;s++)h.append(t[s],u()),C.nextNode(),v.push({type:2,index:++r});h.append(t[i],u())}}}else if(8===h.nodeType)if(h.data===l)v.push({type:2,index:r});else{let t=-1;for(;-1!==(t=h.data.indexOf(n,t+1));)v.push({type:7,index:r}),t+=n.length-1}r++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){var o,n,l,h;if(i===T)return i;let r=void 0!==e?null===(o=s._$Co)||void 0===o?void 0:o[e]:s._$Cl;const u=d(i)?void 0:i._$litDirective$;return(null==r?void 0:r.constructor)!==u&&(null===(n=null==r?void 0:r._$AO)||void 0===n||n.call(r,!1),void 0===u?r=void 0:(r=new u(t),r._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Co)&&void 0!==l?l:h._$Co=[])[e]=r:s._$Cl=r),void 0!==r&&(i=S(t,r._$AS(t,i.values),r,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:r).importNode(s,!0);C.currentNode=o;let n=C.nextNode(),l=0,h=0,u=e[0];for(;void 0!==u;){if(l===u.index){let i;2===u.type?i=new R(n,n.nextSibling,this,t):1===u.type?i=new u.ctor(n,u.name,u.strings,this,t):6===u.type&&(i=new Z(n,this,t)),this._$AV.push(i),u=e[++h]}l!==(null==u?void 0:u.index)&&(n=C.nextNode(),l++)}return C.currentNode=r,o}v(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{constructor(t,i,s,e){var o;this.type=2,this._$AH=A,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cp=null===(o=null==e?void 0:e.isConnected)||void 0===o||o}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cp}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===(null==t?void 0:t.nodeType)&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),d(t)?t===A||null==t||\"\"===t?(this._$AH!==A&&this._$AR(),this._$AH=A):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):v(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==A&&d(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=N.createElement(P(e.h,e.h[0]),this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.v(s);else{const t=new M(o,this),i=t.u(this.options);t.v(s),this.$(i),this._$AH=t}}_$AC(t){let i=E.get(t.strings);return void 0===i&&E.set(t.strings,i=new N(t)),i}T(t){c(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new R(this.k(u()),this.k(u()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){var i;void 0===this._$AM&&(this._$Cp=t,null===(i=this._$AP)||void 0===i||i.call(this,t))}}class k{constructor(t,i,s,e,o){this.type=1,this._$AH=A,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=A}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=S(this,t,i,0),n=!d(t)||t!==this._$AH&&t!==T,n&&(this._$AH=t);else{const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=S(this,e[s+l],i,l),h===T&&(h=this._$AH[l]),n||(n=!d(h)||h!==this._$AH[l]),h===A?t=A:t!==A&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h}n&&!e&&this.j(t)}j(t){t===A?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===A?void 0:t}}const I=s?s.emptyScript:\"\";class L extends k{constructor(){super(...arguments),this.type=4}j(t){t&&t!==A?this.element.setAttribute(this.name,I):this.element.removeAttribute(this.name)}}class z extends k{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5}_$AI(t,i=this){var s;if((t=null!==(s=S(this,t,i,0))&&void 0!==s?s:A)===T)return;const e=this._$AH,o=t===A&&e!==A||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==A&&(e===A||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t)}}class Z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const j={O:o,P:n,A:l,C:1,M:V,L:M,R:v,D:S,I:R,V:k,H:L,N:z,U:H,F:Z},B=i.litHtmlPolyfillSupport;null==B||B(N,R),(null!==(t=i.litHtmlVersions)&&void 0!==t?t:i.litHtmlVersions=[]).push(\"2.8.0\");const D=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new R(i.insertBefore(u(),t),t,void 0,null!=s?s:{})}return l._$AI(t),l};export{j as _$LH,x as html,T as noChange,A as nothing,D as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as i}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var l,o;const r=t;class s extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){var t,e;const i=super.createRenderRoot();return null!==(t=(e=this.renderOptions).renderBefore)&&void 0!==t||(e.renderBefore=i.firstChild),i}update(t){const i=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(i,this.renderRoot,this.renderOptions)}connectedCallback(){var t;super.connectedCallback(),null===(t=this._$Do)||void 0===t||t.setConnected(!0)}disconnectedCallback(){var t;super.disconnectedCallback(),null===(t=this._$Do)||void 0===t||t.setConnected(!1)}render(){return i}}s.finalized=!0,s._$litElement$=!0,null===(l=globalThis.litElementHydrateSupport)||void 0===l||l.call(globalThis,{LitElement:s});const n=globalThis.litElementPolyfillSupport;null==n||n({LitElement:s});const h={_$AK:(t,e,i)=>{t._$AK(e,i)},_$AL:t=>t._$AL};(null!==(o=globalThis.litElementVersions)&&void 0!==o?o:globalThis.litElementVersions=[]).push(\"3.3.3\");export{s as LitElement,r as UpdatingElement,h as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","import { css } from 'lit'\n\nconst commonCss = css`\n  .bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.75);\n    width: 100%;\n    height: 100%;\n  }\n\n  .title {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translate(-50%);\n    font-size: 10px;\n    color: white;\n    text-align: center;\n    text-shadow: 1px 1px #222;\n  }\n\n  .text {\n    color: white;\n    font-size: 10px;\n    text-shadow: 1px 1px #222;\n  }\n`\n\n/** @returns {boolean} */\nfunction isMobile () {\n  return window.matchMedia('(pointer: coarse)').matches || navigator.userAgent.includes('Mobile')\n}\n\n// todo there are better workarounds and proper way to detect notch\n/** @returns {boolean} */\nfunction isProbablyIphone () {\n  if (!isMobile()) return false\n  const smallest = window.innerWidth < window.innerHeight ? window.innerWidth : window.innerHeight\n  return smallest < 600\n}\n\n/**\n * @param {string} url\n */\nfunction openURL (url, newTab = true) {\n  if (newTab) {\n    window.open(url, '_blank', 'noopener,noreferrer')\n  } else {\n    window.open(url, '_self')\n  }\n}\n\nexport {\n  isProbablyIphone,\n  commonCss,\n  isMobile,\n  openURL,\n}\n","import './Scoreboard.css'\nimport MessageFormattedString from './MessageFormattedString'\n\n\nexport type ScoreboardItems = Array<{name: string, value: number, displayName?: any}>\n\ntype ScoreboardProps = {\n  title: string,\n  items: ScoreboardItems,\n  open: boolean\n}\n\nexport const reactKeyForMessage = (message) => {\n  return typeof message === 'string' ? message : JSON.stringify(message)\n}\n\nexport default function Scoreboard ({ title, items, open }: ScoreboardProps) {\n\n  if (!open) return null\n  return (\n    <div className='scoreboard-container'>\n      <div className='scoreboard-title'>\n        <MessageFormattedString message={title} />\n      </div>\n      {\n        items.map((item) => {\n          const message = item.displayName ?? item.name\n          return <div key={reactKeyForMessage(message) + '_' + item.value} className='item-container'>\n            <div className='item-name'>\n              <MessageFormattedString message={message} />\n            </div>\n            <div className='item-value'>\n              {item.value}\n            </div>\n          </div>\n        })\n      }\n    </div>\n  )\n}\n","import { proxy, subscribe } from 'valtio'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { isCypress } from '../standaloneUtils'\nimport { MessageFormatPart } from '../botUtils'\nimport { MessagePart } from './MessageFormatted'\nimport './ChatContainer.css'\nimport { isIos } from './utils'\nimport { reactKeyForMessage } from './Scoreboard'\n\nexport type Message = {\n  parts: MessageFormatPart[],\n  id: number\n  fading?: boolean\n  faded?: boolean\n}\n\nconst MessageLine = ({ message }: { message: Message }) => {\n  const classes = {\n    'chat-message-fadeout': message.fading,\n    'chat-message-fade': message.fading,\n    'chat-message-faded': message.faded,\n    'chat-message': true\n  }\n\n  return <li className={Object.entries(classes).filter(([, val]) => val).map(([name]) => name).join(' ')}>\n    {message.parts.map((msg, i) => <MessagePart key={i} part={msg} />)}\n  </li>\n}\n\ntype Props = {\n  messages: Message[]\n  usingTouch: boolean\n  opacity?: number\n  opened?: boolean\n  onClose?: () => void\n  sendMessage?: (message: string) => boolean | void\n  fetchCompletionItems?: (triggerKind: 'implicit' | 'explicit', completeValue: string, fullValue: string, abortController?: AbortController) => Promise<string[] | void>\n  // width?: number\n  allowSelection?: boolean\n}\n\nexport const chatInputValueGlobal = proxy({\n  value: ''\n})\n\nexport const fadeMessage = (message: Message, initialTimeout: boolean, requestUpdate: () => void) => {\n  setTimeout(() => {\n    message.fading = true\n    requestUpdate()\n    setTimeout(() => {\n      message.faded = true\n      requestUpdate()\n    }, 3000)\n  }, initialTimeout ? 5000 : 0)\n}\n\nexport default ({ messages, opacity = 1, fetchCompletionItems, opened, sendMessage, onClose, usingTouch, allowSelection }: Props) => {\n  const sendHistoryRef = useRef(JSON.parse(window.sessionStorage.chatHistory || '[]'))\n\n  const [completePadText, setCompletePadText] = useState('')\n  const completeRequestValue = useRef('')\n  const [completionItemsSource, setCompletionItemsSource] = useState([] as string[])\n  const [completionItems, setCompletionItems] = useState([] as string[])\n\n  const chatInput = useRef<HTMLInputElement>(null!)\n  const chatMessages = useRef<HTMLDivElement>(null)\n  const openedChatWasAtBottom = useRef(false)\n  const chatHistoryPos = useRef(sendHistoryRef.current.length)\n  const inputCurrentlyEnteredValue = useRef('')\n\n  const setSendHistory = (newHistory: string[]) => {\n    sendHistoryRef.current = newHistory\n    window.sessionStorage.chatHistory = JSON.stringify(newHistory)\n    chatHistoryPos.current = newHistory.length\n  }\n\n  const acceptComplete = (item: string) => {\n    const base = completeRequestValue.current === '/' ? '' : getCompleteValue()\n    updateInputValue(base + item)\n    // todo would be cool but disabled because some comands don't need args (like ping)\n    // // trigger next tab complete\n    // this.chatInput.dispatchEvent(new KeyboardEvent('keydown', { code: 'Space' }))\n    chatInput.current.focus()\n  }\n\n  const updateInputValue = (newValue: string) => {\n    chatInput.current.value = newValue\n    onMainInputChange()\n    setTimeout(() => {\n      chatInput.current.setSelectionRange(newValue.length, newValue.length)\n    }, 0)\n  }\n\n  useEffect(() => {\n    // todo focus input on any keypress except tab\n  }, [])\n\n  const resetCompletionItems = () => {\n    setCompletionItemsSource([])\n    setCompletionItems([])\n  }\n\n  useEffect(() => {\n    if (opened) {\n      updateInputValue(chatInputValueGlobal.value)\n      chatInputValueGlobal.value = ''\n      if (!usingTouch) {\n        chatInput.current.focus()\n      }\n      const unsubscribe = subscribe(chatInputValueGlobal, () => {\n        if (!chatInputValueGlobal.value) return\n        updateInputValue(chatInputValueGlobal.value)\n        chatInputValueGlobal.value = ''\n        chatInput.current.focus()\n      })\n      return unsubscribe\n    }\n    if (!opened && chatMessages.current) {\n      chatMessages.current.scrollTop = chatMessages.current.scrollHeight\n    }\n  }, [opened])\n\n  useMemo(() => {\n    if (opened) {\n      completeRequestValue.current = ''\n      resetCompletionItems()\n    }\n  }, [opened])\n\n  useEffect(() => {\n    if ((!opened || (opened && openedChatWasAtBottom.current)) && chatMessages.current) {\n      openedChatWasAtBottom.current = false\n      // stay at bottom on messages changes\n      chatMessages.current.scrollTop = chatMessages.current.scrollHeight\n    }\n  }, [messages])\n\n  useMemo(() => {\n    if ((opened && chatMessages.current)) {\n      const wasAtBottom = chatMessages.current.scrollTop === chatMessages.current.scrollHeight - chatMessages.current.clientHeight\n      openedChatWasAtBottom.current = wasAtBottom\n      // console.log(wasAtBottom, chatMessages.current.scrollTop, chatMessages.current.scrollHeight - chatMessages.current.clientHeight)\n    }\n  }, [messages])\n\n  const auxInputFocus = (fireKey: string) => {\n    chatInput.current.focus()\n    chatInput.current.dispatchEvent(new KeyboardEvent('keydown', { code: fireKey, bubbles: true }))\n  }\n\n  const getDefaultCompleteValue = () => {\n    const raw = chatInput.current.value\n    return raw.slice(0, chatInput.current.selectionEnd ?? raw.length)\n  }\n  const getCompleteValue = (value = getDefaultCompleteValue()) => {\n    const valueParts = value.split(' ')\n    const lastLength = valueParts.at(-1)!.length\n    const completeValue = lastLength ? value.slice(0, -lastLength) : value\n    if (valueParts.length === 1 && value.startsWith('/')) return '/'\n    return completeValue\n  }\n\n  const fetchCompletions = async (implicit: boolean, inputValue = chatInput.current.value) => {\n    const completeValue = getCompleteValue(inputValue)\n    completeRequestValue.current = completeValue\n    resetCompletionItems()\n    const newItems = await fetchCompletionItems?.(implicit ? 'implicit' : 'explicit', completeValue, inputValue) ?? []\n    if (completeValue !== completeRequestValue.current) return\n    setCompletionItemsSource(newItems)\n    updateFilteredCompleteItems(newItems)\n  }\n\n  const updateFilteredCompleteItems = (sourceItems: string[]) => {\n    const newCompleteItems = sourceItems.filter(item => {\n      // this regex is imporatnt is it controls the word matching\n      const compareableParts = item.split(/[_:]/)\n      const lastWord = chatInput.current.value.slice(0, chatInput.current.selectionEnd ?? chatInput.current.value.length).split(' ').at(-1)!\n      return [item, ...compareableParts].some(compareablePart => compareablePart.startsWith(lastWord))\n    })\n    setCompletionItems(newCompleteItems)\n  }\n\n  const onMainInputChange = () => {\n    const completeValue = getCompleteValue()\n    setCompletePadText(completeValue === '/' ? '' : completeValue)\n    if (completeRequestValue.current === completeValue) {\n      updateFilteredCompleteItems(completionItemsSource)\n      return\n    }\n\n    if (completeValue.startsWith('/')) {\n      void fetchCompletions(true)\n    } else {\n      resetCompletionItems()\n    }\n    completeRequestValue.current = completeValue\n    // if (completeValue === '/') {\n    //   void fetchCompletions(true)\n    // }\n  }\n\n  return (\n    <>\n      <div className={`chat-wrapper chat-messages-wrapper ${usingTouch ? 'display-mobile' : ''}`} hidden={isCypress()} style={{\n        userSelect: opened && allowSelection ? 'text' : undefined,\n      }}>\n        {opacity && <div ref={chatMessages} className={`chat ${opened ? 'opened' : ''}`} id=\"chat-messages\" style={{ opacity }}>\n          {messages.map((m) => (\n            <MessageLine key={reactKeyForMessage(m)} message={m} />\n          ))}\n        </div> || undefined}\n      </div>\n\n      <div className={`chat-wrapper chat-input-wrapper ${usingTouch ? 'input-mobile' : ''}`} hidden={!opened}>\n        <div className=\"chat-input\">\n          {completionItems?.length ? (\n            <div className=\"chat-completions\">\n              <div className=\"chat-completions-pad-text\">{completePadText}</div>\n              <div className=\"chat-completions-items\">\n                {completionItems.map((item) => (\n                  <div key={item} onClick={() => acceptComplete(item)}>{item}</div>\n                ))}\n              </div>\n            </div>\n          ) : null}\n          <form onSubmit={(e) => {\n            e.preventDefault()\n            const message = chatInput.current.value\n            if (message) {\n              setSendHistory([...sendHistoryRef.current, message])\n              const result = sendMessage?.(message)\n              if (result !== false) {\n                onClose?.()\n              }\n            }\n          }}>\n            {isIos && <input\n              value=''\n              type=\"text\"\n              className=\"chat-mobile-hidden\"\n              id=\"chatinput-next-command\"\n              spellCheck={false}\n              autoComplete=\"off\"\n              onFocus={() => auxInputFocus('ArrowUp')}\n              onChange={() => { }}\n            />}\n            <input\n              defaultValue=''\n              ref={chatInput}\n              type=\"text\"\n              className=\"chat-input\"\n              id=\"chatinput\"\n              spellCheck={false}\n              autoComplete=\"off\"\n              aria-autocomplete=\"both\"\n              onChange={onMainInputChange}\n              onKeyDown={(e) => {\n                if (e.code === 'ArrowUp') {\n                  if (chatHistoryPos.current === 0) return\n                  if (chatHistoryPos.current === sendHistoryRef.current.length) { // started navigating history\n                    inputCurrentlyEnteredValue.current = e.currentTarget.value\n                  }\n                  chatHistoryPos.current--\n                  updateInputValue(sendHistoryRef.current[chatHistoryPos.current] || '')\n                } else if (e.code === 'ArrowDown') {\n                  if (chatHistoryPos.current === sendHistoryRef.current.length) return\n                  chatHistoryPos.current++\n                  updateInputValue(sendHistoryRef.current[chatHistoryPos.current] || inputCurrentlyEnteredValue.current || '')\n                }\n                if (e.code === 'Tab') {\n                  if (completionItemsSource.length) {\n                    if (completionItems.length) {\n                      acceptComplete(completionItems[0])\n                    }\n                  } else {\n                    void fetchCompletions(false)\n                  }\n                  e.preventDefault()\n                }\n                if (e.code === 'Space') {\n                  resetCompletionItems()\n                  if (chatInput.current.value.startsWith('/')) {\n                    // alternative we could just simply use keyup, but only with keydown we can display suggestions popup as soon as possible\n                    void fetchCompletions(true, getCompleteValue(getDefaultCompleteValue() + ' '))\n                  }\n                }\n              }}\n            />\n            {isIos && <input\n              value=''\n              type=\"text\"\n              className=\"chat-mobile-hidden\"\n              id=\"chatinput-prev-command\"\n              spellCheck={false}\n              autoComplete=\"off\"\n              onFocus={() => auxInputFocus('ArrowDown')}\n              onChange={() => { }}\n            />}\n            <button type='submit' style={{ visibility: 'hidden' }} />\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { ComponentProps } from 'react'\nimport { render } from '@xmcl/text-component'\nimport { noCase } from 'change-case'\nimport mojangson from 'mojangson'\nimport { MessageFormatPart } from '../botUtils'\nimport { openURL } from '../menus/components/common'\nimport { chatInputValueGlobal } from './ChatContainer'\n\nconst hoverItemToText = (hoverEvent: MessageFormatPart['hoverEvent']) => {\n  try {\n    if (!hoverEvent) return undefined\n    const contents = hoverEvent['contents'] ?? hoverEvent.value\n    if (typeof contents.text === 'string' && contents.text.startsWith('{')) {\n      Object.assign(contents, mojangson.simplify(mojangson.parse(contents.text)))\n    }\n    if (typeof contents === 'string') return contents\n    // if (hoverEvent.action === 'show_text') {\n    //   return contents\n    // }\n    if (hoverEvent.action === 'show_item') {\n      return contents.id\n    }\n    if (hoverEvent.action === 'show_entity') {\n      let str = noCase(contents.type.replace('minecraft:', ''))\n      if (contents.name) str += `: ${contents.name.text}`\n      return str\n    }\n  } catch (err) {\n    // todo report critical error\n    console.error('Failed to parse message hover', err)\n    return undefined\n  }\n}\n\nconst clickEventToProps = (clickEvent: MessageFormatPart['clickEvent']) => {\n  if (!clickEvent) return\n  if (clickEvent.action === 'run_command' || clickEvent.action === 'suggest_command') {\n    return {\n      onClick () {\n        chatInputValueGlobal.value = clickEvent.value\n      }\n    }\n  }\n  if (clickEvent.action === 'open_url') {\n    return {\n      onClick () {\n        const confirm = window.confirm(`Open ${clickEvent.value}?`)\n        if (confirm) {\n          openURL(clickEvent.value)\n        }\n      }\n    }\n  }\n  //@ts-expect-error todo\n  if (clickEvent.action === 'copy_to_clipboard') {\n    return {\n      onClick () {\n        void navigator.clipboard.writeText(clickEvent.value)\n      }\n    }\n  }\n}\n\nexport const MessagePart = ({ part, ...props }: { part: MessageFormatPart } & ComponentProps<'span'>) => {\n\n  const { color, italic, bold, underlined, strikethrough, text, clickEvent, hoverEvent, obfuscated } = part\n\n  const clickProps = clickEventToProps(clickEvent)\n  const hoverMessageRaw = hoverItemToText(hoverEvent)\n  const hoverItemText = hoverMessageRaw && typeof hoverMessageRaw !== 'string' ? render(hoverMessageRaw).children.map(child => child.component.text).join('') : hoverMessageRaw\n\n  const applyStyles = [\n    color ? colorF(color.toLowerCase()) + `; text-shadow: 1px 1px 0px ${getColorShadow(colorF(color.toLowerCase()).replace('color:', ''))}` : messageFormatStylesMap.white,\n    italic && messageFormatStylesMap.italic,\n    bold && messageFormatStylesMap.bold,\n    italic && messageFormatStylesMap.italic,\n    underlined && messageFormatStylesMap.underlined,\n    strikethrough && messageFormatStylesMap.strikethrough,\n    obfuscated && messageFormatStylesMap.obfuscated\n  ].filter(Boolean)\n\n  return <span title={hoverItemText} style={parseInlineStyle(applyStyles.join(' '))} {...clickProps} {...props}>{text}</span>\n}\n\nexport default ({ parts }: { parts: readonly MessageFormatPart[] }) => {\n  return (\n    <span>\n      {parts.map((part, i) => <MessagePart key={i} part={part} />)}\n    </span>\n  )\n}\n\nconst colorF = (color) => {\n  return color.trim().startsWith('#') ? `color:${color}` : messageFormatStylesMap[color] ?? undefined\n}\n\nexport function getColorShadow (hex, dim = 0.25) {\n  const color = parseInt(hex.replace('#', ''), 16)\n\n  const r = Math.trunc((color >> 16 & 0xFF) * dim)\n  const g = Math.trunc((color >> 8 & 0xFF) * dim)\n  const b = Math.trunc((color & 0xFF) * dim)\n\n  const f = (c) => ('00' + c.toString(16)).slice(-2)\n  return `#${f(r)}${f(g)}${f(b)}`\n}\n\nexport function parseInlineStyle (style: string): Record<string, any> {\n  const obj: Record<string, any> = {}\n  for (const rule of style.split(';')) {\n    const [prop, value] = rule.split(':')\n    const cssInJsProp = prop.trim().replaceAll(/-./g, (x) => x.toUpperCase()[1])\n    obj[cssInJsProp] = value.trim()\n  }\n  return obj\n}\n\nexport const messageFormatStylesMap = {\n  black: 'color:#000000',\n  dark_blue: 'color:#0000AA',\n  dark_green: 'color:#00AA00',\n  dark_aqua: 'color:#00AAAA',\n  dark_red: 'color:#AA0000',\n  dark_purple: 'color:#AA00AA',\n  gold: 'color:#FFAA00',\n  gray: 'color:#AAAAAA',\n  dark_gray: 'color:#555555',\n  blue: 'color:#5555FF',\n  green: 'color:#55FF55',\n  aqua: 'color:#55FFFF',\n  red: 'color:#FF5555',\n  light_purple: 'color:#FF55FF',\n  yellow: 'color:#FFFF55',\n  white: 'color:#FFFFFF',\n  bold: 'font-weight:900',\n  strikethrough: 'text-decoration:line-through',\n  underlined: 'text-decoration:underline',\n  italic: 'font-style:italic',\n  obfuscated: 'color: #222326;background-color: #222326;'\n}\n","import { useMemo } from 'react'\nimport { fromFormattedString } from '@xmcl/text-component'\nimport { formatMessage } from '../botUtils'\nimport MessageFormatted from './MessageFormatted'\n\n/** like MessageFormatted, but receives raw string or json instead, uses window.loadedData */\nexport default ({ message }: { message: string | Record<string, any> | null }) => {\n  const messageJson = useMemo(() => {\n    if (!message) return null\n    try {\n      return formatMessage(typeof message === 'string' ? fromFormattedString(message) : message)\n    } catch (err) {\n      console.error(err) // todo ensure its being logged\n      return null\n    }\n  }, [message])\n\n  return messageJson ? <MessageFormatted parts={messageJson} /> : null\n}\n"],"names":["__defProp","__defNormalProp","obj","key","value","__publicField","getSuggestedStyle","style","styledObject","l","TextFormat","render","src","children","component","fromFormattedString","formatted","firstCode","textComponent","builder","i","format","_TextFormat","name","code","cssForeground","cssBackground","index","formatMessage","message","msglist","readMsg","msg","styles","tText","splitted","j","part","msgWith","ex","flat","_a","newMsg","SPLIT_LOWER_UPPER_RE","SPLIT_UPPER_UPPER_RE","SPLIT_NUMBER_LOWER_RE","SPLIT_LETTER_NUMBER_RE","DEFAULT_STRIP_REGEXP","SPLIT_REPLACE_VALUE","DEFAULT_PREFIX_CHARACTERS","split","input","options","separateNumbers","result","start","end","noCase","getPrefix","lowerFactory","locale","prefixCharacters","prefix","char","root","factory","module","this","Rule","symbols","postprocess","withCursorAt","symbolSequence","getSymbolShortDisplay","State","rule","dot","reference","wantedBy","child","state","node","Parser","Column","grammar","nextColumn","states","wants","completed","w","left","exp","nulls","right","rules","r","s","copy","Grammar","byName","lexer","g","StreamLexer","data","ch","token","buffer","lines","nextLineBreak","col","lastLineDigits","line","pad","n","length","column","chunk","e","err","literal","scannable","expect","next","lexerError","tokenDisplay","lexerMessage","lastColumnIndex","lastColumn","expectantStates","nextSymbol","stateStacks","stateStack","symbolDisplay","lastDisplay","sameDisplayCount","display","symbol","getSymbolLongDisplay","visited","prevState","childVisited","childResult","considerations","t","c","type","id","x","parseValue","str","suffixes","suffixToType","lastC","v","decimal","isInt32","extractPair","kv","output","extractObject","d","extractTypedArray","extractArray","extractArrayPair","b","nearley","require$$0","require$$1","simplify","transform","acc","stringify","entries","_type","_value","normalizeString","getArrayValues","getArrayPrefix","arrayElements","getSuffix","arr","hasMissingEl","hasMissingElements","curr","val","normalize","parse","text","parserNE","mojangson","o$3","o","S","h","a","u$1","u","f","_","m","p","$","y","T","A","E","C","P","V","N","H","L","z","k","M","R","Z","I","B","D","css","openURL","url","newTab","reactKeyForMessage","Scoreboard","title","items","open","jsxs","jsx","MessageFormattedString","item","MessageLine","classes","MessagePart","chatInputValueGlobal","proxy","fadeMessage","initialTimeout","requestUpdate","Chat","messages","opacity","fetchCompletionItems","opened","sendMessage","onClose","usingTouch","allowSelection","sendHistoryRef","useRef","completePadText","setCompletePadText","useState","completeRequestValue","completionItemsSource","setCompletionItemsSource","completionItems","setCompletionItems","chatInput","chatMessages","openedChatWasAtBottom","chatHistoryPos","inputCurrentlyEnteredValue","setSendHistory","newHistory","acceptComplete","base","getCompleteValue","updateInputValue","newValue","onMainInputChange","useEffect","resetCompletionItems","subscribe","useMemo","wasAtBottom","auxInputFocus","fireKey","getDefaultCompleteValue","raw","valueParts","lastLength","completeValue","fetchCompletions","implicit","inputValue","newItems","updateFilteredCompleteItems","sourceItems","newCompleteItems","compareableParts","lastWord","compareablePart","Fragment","isCypress","isIos","hoverItemToText","hoverEvent","contents","clickEventToProps","clickEvent","props","color","italic","bold","underlined","strikethrough","obfuscated","clickProps","hoverMessageRaw","hoverItemText","applyStyles","colorF","getColorShadow","messageFormatStylesMap","parseInlineStyle","MessageFormatted$1","parts","hex","dim","prop","cssInJsProp","MessageFormattedString$1","messageJson","MessageFormatted"],"mappings":"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","x_google_ignoreList":[0,2,3,4,5,6,7,8,9]}